apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-migrations
  namespace: default
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    spec:
      serviceAccountName: secrets-manager-access-sa
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: aws-secrets
      restartPolicy: Never
      containers:
      - name: migrations
        image: {{ .Values.core.image }}
        command: ["python", "manage.py", "migrate"]
        env:
          - name: DJANGO_CONFIGURATION
            valueFrom:
              secretKeyRef:
                name: application-secrets
                key: DJANGO_CONFIGURATION
          - name: DJANGO_CELERY_BROKER_URL
            valueFrom:
              secretKeyRef:
                name: application-secrets
                key: DJANGO_CELERY_BROKER_URL
          - name: DJANGO_CELERY_RESULT_BACKEND
            valueFrom:
              secretKeyRef:
                name: application-secrets
                key: DJANGO_CELERY_RESULT_BACKEND
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: application-secrets
                key: DATABASE_URL
          - name: CACHE_LOCATION
            valueFrom:
              secretKeyRef:
                name: application-secrets
                key: CACHE_LOCATION
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"
            readOnly: true